#lang scheme

(define (argMin f l)
(foldr (lambda (x y) (if (< (f x) (f y)) x y)) (car l) l))

#| Тест на argMin ф-ята
(define l '(1 -2 -8 3))
(define (f x) (* x  -2))|#

;(define (maxSlope track)
  

(define track '((0 . 900) (100 . 910) (200 . 925) (300 . 905) (600 . 950)))
(define tracks '(((0 . 900) (100 . 910) (200 . 925) (300 . 905) (600 . 950))
                ((0 . 1300) (100 . 1305) (500 . 1340) (800 . 1360) (1000 . 1320))
                ((0 . 800) (200 . 830) (300 . 845) (600 . 880) (800 . 830))))

(define (maxSlope track) (apply max  (map (lambda (x y) (abs (/  (- (cdr y) (cdr x)) (- (car y) (car x)))))
                                   (reverse (cdr track)) (cdr (reverse track)))))

(define (easiestTrackUnder maxLen tracks)
  (argMin maxSlope (filter (lambda (track) (< (- (cdar (reverse track)) (cdar track)) maxLen)) tracks)))

(easiestTrackUnder 800 tracks)